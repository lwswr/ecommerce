{"version":3,"sources":["API.ts","appSlice.ts","BasketItemComp.tsx","Basket.tsx","BasketNav.tsx","DetailedItem.tsx","Selector.tsx","StoreItemComp.tsx","StoreItems.tsx","SVGs.tsx","App.tsx","store.ts","index.tsx"],"names":["getAPIData","a","axios","get","response","data","sortOptions","appSlice","createSlice","name","initialState","storeItems","basketItems","toggleBasket","togglePopUp","currentSortOption","popUpItem","id","title","price","description","category","image","reducers","setData","state","payload","items","addItemToBasket","some","item","storeItem","index","findIndex","_item","push","quantity","qty","itemInBasket","removeItemFromBasket","splice","toggle","updateSortOption","arr","key","option","slice","sort","b","localeCompare","actions","Item","styled","div","QtyAndPrice","ProductInterface","Title","Price","Qty","Button","button","BasketItemComp","basketItem","onDelete","toFixed","onClick","BasketColumn","BasketItemsWindow","Block","calculateTotal","total","i","length","Basket","toggleBasketView","useSelector","selectToggle","dispatch","useDispatch","map","_id","BasketBox","Count","BasketNav","selectState","style","width","marginRight","ItemContainer","ItemWindow","NumberInput","input","Inputs","Desc","DetailedItem","addItem","togglePU","togglePopUpView","React","setQty","display","justifyContent","src","alt","height","padding","type","value","onChange","e","parseInt","target","Select","select","Selector","selectedOption","alignItems","zIndex","StoreItemContainer","Column","StoreItemTitle","StoreItemPrice","StoreItemComp","StoreItemsContainer","StoreItems","SVGs","xmlns","viewBox","marginTop","position","fill","fillOpacity","d","MainContainer","TopNav","DropDown","LoadingCon","Loading","App","useEffect","console","log","getData","_toggle","alignContent","_qty","_option","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4ec0751d.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport type StoreItem = {\n  id: number;\n  title: string;\n  price: number;\n  description: string;\n  category: string;\n  image: string;\n};\n\nconst API_URL: string = `https://fakestoreapi.com/products`;\n\nexport const getAPIData = async () => {\n  const response = await axios.get<StoreItem[]>(API_URL);\n  return response.data;\n};\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { StoreItem } from \"./API\";\n\nexport const sortOptions = [\"sort by\", \"alphabetical\", \"price\"] as const;\n\nexport type SortOption = typeof sortOptions[number];\n\nexport type BasketItem = {\n  storeItem: StoreItem;\n  quantity: number;\n};\n\nexport type AppState = {\n  storeItems: StoreItem[];\n  basketItems: BasketItem[];\n  toggleBasket: boolean;\n  togglePopUp: boolean;\n  currentSortOption: SortOption;\n  popUpItem: StoreItem;\n};\n\nconst initialAppState: AppState = {\n  storeItems: [],\n  basketItems: [],\n  toggleBasket: false,\n  togglePopUp: false,\n  currentSortOption: \"sort by\",\n  popUpItem: {\n    id: 1,\n    title: \"\",\n    price: 0,\n    description: \"\",\n    category: \"\",\n    image: \"\",\n  },\n};\n\nconst sortList = (arr: StoreItem[], key: SortOption) => {\n  return key === \"price\"\n    ? arr.slice(0).sort((a, b) => a.price - b.price)\n    : key === \"alphabetical\"\n    ? arr.slice(0).sort((a, b) => a.title.localeCompare(b.title))\n    : arr.slice(0).sort((a, b) => a.id - b.id);\n};\n\nconst appSlice = createSlice({\n  name: \"appSlice\",\n  initialState: initialAppState,\n  reducers: {\n    // after api called on render payload of items is set to storeItems\n    setData: (state, { payload }: PayloadAction<{ items: StoreItem[] }>) => {\n      state.storeItems = payload.items;\n    },\n    // uses id to add item with same id to basketItems state\n    addItemToBasket: (\n      state: AppState,\n      { payload }: PayloadAction<{ id: number; qty: number }>\n    ) => {\n      if (payload.id) {\n        const isAlreadyInBasket = state.basketItems.some(\n          (item) => item.storeItem.id === payload.id\n        );\n        if (isAlreadyInBasket === false) {\n          const index: number = state.storeItems.findIndex(\n            (_item) => _item.id === payload.id\n          );\n          state.basketItems.push({\n            storeItem: state.storeItems[index],\n            quantity: payload.qty,\n          });\n        } else {\n          const itemInBasket = state.basketItems.findIndex(\n            (item) => item.storeItem.id === payload.id\n          );\n          state.basketItems[itemInBasket].quantity += payload.qty;\n        }\n      }\n    },\n    removeItemFromBasket: (\n      state,\n      { payload }: PayloadAction<{ id: number }>\n    ) => {\n      if (payload.id) {\n        const index: number = state.basketItems.findIndex(\n          (item) => item.storeItem.id === payload.id\n        );\n        if (payload.id > -1) state.basketItems.splice(index, 1);\n      }\n    },\n    toggleBasket: (state, { payload }: PayloadAction<{ toggle: boolean }>) => {\n      state.toggleBasket = !payload.toggle;\n    },\n    togglePopUp: (\n      state,\n      { payload }: PayloadAction<{ toggle: boolean; id: number }>\n    ) => {\n      if (payload.id) {\n        const index: number = state.storeItems.findIndex(\n          (item) => item.id === payload.id\n        );\n        state.popUpItem = state.storeItems[index];\n        state.togglePopUp = !payload.toggle;\n      }\n    },\n    updateSortOption: (\n      state,\n      { payload }: PayloadAction<{ option: SortOption }>\n    ) => {\n      state.currentSortOption = payload.option;\n      state.storeItems = sortList(state.storeItems, state.currentSortOption);\n    },\n  },\n});\n\nexport const {\n  setData,\n  addItemToBasket,\n  removeItemFromBasket,\n  toggleBasket,\n  togglePopUp,\n  updateSortOption,\n} = appSlice.actions;\n\nexport default appSlice.reducer;\n","import * as React from \"react\";\nimport { BasketItem } from \"./appSlice\";\nimport styled from \"styled-components\";\n\nconst Item = styled.div`\n  background: white;\n  margin-bottom: 0.5rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-space-evenly;\n  padding: 0.5rem;\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 2px 5px -1px,\n    rgba(0, 0, 0, 0.3) 0px 1px 3px -1px;\n`;\n\nconst QtyAndPrice = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nconst ProductInterface = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  padding-top: 1rem;\n  border-top: 1px solid lightgrey;\n`;\n\nconst Title = styled.div`\n  font-size: 1rem;\n  padding: 0.5rem 0 1rem 0;\n`;\n\nconst Price = styled.div`\n  font-size: 1rem;\n`;\n\nconst Qty = styled.div`\n  margin-left: 1rem;\n  color: grey;\n`;\n\nconst Button = styled.button`\n  background: rgb(0, 137, 216);\n  border: 1px solid rgb(0, 137, 216);\n  transition: 0.2s;\n  color: white;\n  border-radius: 5px;\n  padding: 5px;\n  margin-left: 10px;\n  :hover {\n    background: rgb(0, 90, 173);\n    border: 1px solid rgb(0, 90, 173);\n  }\n`;\n\nexport const BasketItemComp = ({\n  basketItem,\n  onDelete,\n}: {\n  basketItem: BasketItem;\n  onDelete: (id: number) => void;\n}) => {\n  return (\n    <Item>\n      <Title>{basketItem.storeItem.title}</Title>\n      <ProductInterface>\n        <QtyAndPrice>\n          <Price>£{basketItem.storeItem.price.toFixed(2)}</Price>\n          <Qty>Qty {basketItem.quantity}</Qty>\n        </QtyAndPrice>\n        <Button onClick={() => onDelete(basketItem.storeItem.id)}>\n          Delete\n        </Button>\n      </ProductInterface>\n    </Item>\n  );\n};\n","import * as React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { BasketItem, removeItemFromBasket } from \"./appSlice\";\nimport { BasketItemComp } from \"./BasketItemComp\";\n\nconst BasketColumn = styled.div`\n  width: 22%;\n  z-index: 10;\n`;\n\nconst BasketItemsWindow = styled.div`\n  background: rgb(240, 239, 239);\n  margin: 20px 35px 20px 20px;\n  border-radius: 5px;\n  box-shadow: rgba(0, 0, 0, 0.16) 0px 10px 36px 0px,\n    rgba(0, 0, 0, 0.06) 0px 0px 0px 1px;\n  padding: 0.5rem 0.5rem 0.1rem 0.5rem;\n`;\n\nconst Block = styled.div`\n  background: white;\n  margin-bottom: 0.5rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  padding: 0.5rem;\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 2px 5px -1px,\n    rgba(0, 0, 0, 0.3) 0px 1px 3px -1px;\n`;\n\nconst calculateTotal = (arr: BasketItem[]) => {\n  let total = 0;\n  for (let i = 0; i < arr.length; i++) {\n    total = arr[i].storeItem.price * arr[i].quantity + total;\n  }\n  return total.toFixed(2);\n};\n\nexport const Basket = ({ basketItems }: { basketItems: BasketItem[] }) => {\n  const toggleBasketView = useSelector(selectToggle);\n  const dispatch = useDispatch();\n\n  return (\n    <BasketColumn>\n      {toggleBasketView ? (\n        <BasketItemsWindow>\n          {basketItems.length > 0 ? (\n            <div>\n              {basketItems.map((basketItem) => {\n                return (\n                  <BasketItemComp\n                    key={basketItem.storeItem.id}\n                    basketItem={basketItem}\n                    onDelete={(_id) =>\n                      dispatch(removeItemFromBasket({ id: _id }))\n                    }\n                  />\n                );\n              })}\n            </div>\n          ) : (\n            <Block>There are no items in the basket</Block>\n          )}\n          <Block>Total - £{calculateTotal(basketItems)}</Block>\n        </BasketItemsWindow>\n      ) : null}\n    </BasketColumn>\n  );\n};\n\nconst selectToggle = (toggleBasket: { toggleBasket: boolean }) => toggleBasket;\n","import * as React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { AppState } from \"./appSlice\";\n\nconst BasketBox = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-content: center;\n  align-items: center;\n  position: absolute;\n  z-index: 12;\n  height: 4rem;\n  width: 4rem;\n  margin-top: 20px;\n  background: white;\n  border-radius: 5px;\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 6px 12px -2px,\n    rgba(0, 0, 0, 0.3) 0px 3px 7px -3px;\n  transition: 0.2s;\n  :hover {\n    background: #0099ff;\n  }\n  :hover :nth-child(1) {\n    color: white;\n  }\n`;\n\nconst Title = styled.div`\n  color: #005f9e;\n`;\n\nconst Count = styled.div`\n  position: absolute;\n  text-align: center;\n  margin: 0.5rem 0 0 3rem;\n  padding: 5px;\n  width: 1.2rem;\n  border-radius: 25px;\n  background: #ee9b00;\n  color: white;\n  z-index: 13;\n`;\n\nexport const BasketNav = ({\n  toggle,\n}: {\n  toggle: (toggle: boolean) => void;\n}) => {\n  const { toggleBasket, basketItems } = useSelector(selectState);\n  return (\n    <div style={{ width: \"6rem\", marginRight: \"3px\" }}>\n      {basketItems.length > 0 ? <Count>{basketItems.length}</Count> : null}\n      <BasketBox onClick={() => toggle(toggleBasket)}>\n        <Title>Basket</Title>\n      </BasketBox>\n    </div>\n  );\n};\n\nconst selectState = ({ state }: { state: AppState }) => state;\n","import * as React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { StoreItem } from \"./API\";\n\nconst ItemContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  box-shadow: rgba(0, 0, 0, 0.16) 0px 10px 36px 0px,\n    rgba(0, 0, 0, 0.06) 0px 0px 0px 1px;\n  width: 50%;\n  height: 75vh;\n  padding: 1rem 3rem;\n  z-index: 12;\n  background: rgb(240, 239, 239);\n  margin: 0;\n  position: absolute;\n  top: 50%;\n  -ms-transform: translateY(-50%);\n  transform: translateY(-50%);\n`;\n\nconst ItemWindow = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  width: 100%;\n  height: 100%;\n  padding: 1rem;\n  margin: 1rem;\n  box-shadow: rgba(0, 0, 0, 0.1) 0px 0px 5px 0px,\n    rgba(0, 0, 0, 0.1) 0px 0px 1px 0px;\n  z-index: 10;\n  background: white;\n`;\n\nconst Button = styled.button`\n  background: rgb(0, 137, 216);\n  border: 1px solid rgb(0, 137, 216);\n  transition: 0.2s;\n  color: white;\n  border-radius: 5px;\n  padding: 5px;\n  margin-right: 1rem;\n  :hover {\n    background: rgb(0, 90, 173);\n    border: 1px solid rgb(0, 90, 173);\n  }\n`;\n\nconst NumberInput = styled.input`\n  width: 3rem;\n  border: 1px solid rgb(0, 137, 216);\n  border-radius: 5px;\n  padding: 5px;\n  margin-right: 1rem;\n  transition: 0.2s;\n  :hover {\n    box-shadow: rgba(0, 90, 173, 0.2) 0px 3px 6px,\n      rgba(0, 90, 173, 0.2) 0px 3px 6px;\n  }\n`;\n\nconst Inputs = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  border-top: 1px solid lightgrey;\n  padding-top: 1rem;\n`;\n\nconst Title = styled.div`\n  font-size: 2rem;\n`;\n\nconst Desc = styled.div`\n  font-size: 1rem;\n`;\n\nconst Price = styled.div`\n  padding: 5px;\n  margin-right: 1rem;\n`;\n\nconst ProductInterface = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nexport const DetailedItem = ({\n  item,\n  addItem,\n  togglePU,\n}: {\n  item: StoreItem;\n  addItem: (id: number, qty: number) => void;\n  togglePU: (toggle: boolean, id: number) => void;\n}) => {\n  const togglePopUpView = useSelector(selectToggle);\n  const [qty, setQty] = React.useState<number>(1);\n  return (\n    <ItemContainer>\n      <ItemWindow>\n        <Title>{item.title}</Title>\n        <Desc>{item.description}</Desc>\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n          <img\n            src={item.image}\n            alt=\"\"\n            style={{ width: \"25%\", height: \"auto\", padding: \"20px 0 20px 0\" }}\n          />\n        </div>\n        <Inputs>\n          <ProductInterface>\n            <Price>£{item.price.toFixed(2)}</Price>\n            <NumberInput\n              type=\"number\"\n              value={qty}\n              onChange={(e) => setQty(parseInt(e.target.value))}\n            />\n            <Button\n              onClick={() => {\n                if (qty > 0) {\n                  addItem(item.id, qty);\n                  setQty(1);\n                }\n              }}\n            >\n              Add to Basket\n            </Button>\n          </ProductInterface>\n          <Button onClick={() => togglePU(togglePopUpView, item.id)}>\n            Back\n          </Button>\n        </Inputs>\n      </ItemWindow>\n    </ItemContainer>\n  );\n};\n\nconst selectToggle = (togglePopUp: boolean) => togglePopUp;\n","import * as React from \"react\";\nimport { SortOption, sortOptions } from \"./appSlice\";\nimport styled from \"styled-components\";\n\nconst Select = styled.select`\n  display: flex;\n  z-index: 15;\n  padding: 0.5rem;\n  border: none;\n  border-radius: 0.5rem;\n  margin: 1rem 0 1rem 0;\n  color: rgba(0, 96, 151, 0.8);\n  box-shadow: rgba(0, 0, 0, 0.1) 0px 4px 12px;\n`;\n\nexport const Selector = ({\n  selectedOption,\n  value,\n  onChange,\n}: {\n  selectedOption: Readonly<SortOption[]>;\n  value: SortOption;\n  onChange: (value: SortOption) => void;\n}) => {\n  return (\n    <div style={{ width: \"100%\" }}>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          zIndex: 10,\n        }}\n      >\n        <Select\n          value={value ?? selectedOption}\n          onChange={(e) => onChange(e.target.value as any)}\n        >\n          {sortOptions.map((option) => {\n            return (\n              <option key={option} value={option}>\n                {option}\n              </option>\n            );\n          })}\n        </Select>\n      </div>\n    </div>\n  );\n};\n","import * as React from \"react\";\nimport { StoreItem } from \"./API\";\nimport styled from \"styled-components\";\nimport { useSelector } from \"react-redux\";\nimport { AppState } from \"./appSlice\";\n\nconst StoreItemContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  width: 100%;\n  height: 100%;\n  padding: 1rem;\n  margin: 1rem;\n  box-shadow: rgba(0, 0, 0, 0.1) 0px 0px 5px 0px,\n    rgba(0, 0, 0, 0.1) 0px 0px 1px 0px;\n  z-index: 10;\n  background: white;\n`;\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n`;\n\nconst Button = styled.button`\n  background: rgb(0, 137, 216);\n  border: 1px solid rgb(0, 137, 216);\n  transition: 0.2s;\n  color: white;\n  border-radius: 5px;\n  padding: 5px;\n  margin-left: 10px;\n  :hover {\n    background: rgb(0, 90, 173);\n    border: 1px solid rgb(0, 90, 173);\n  }\n`;\n\nconst NumberInput = styled.input`\n  width: 3rem;\n  border: 1px solid rgb(0, 137, 216);\n  border-radius: 5px;\n  padding: 5px;\n  transition: 0.2s;\n  :hover {\n    box-shadow: rgba(0, 90, 173, 0.2) 0px 3px 6px,\n      rgba(0, 90, 173, 0.2) 0px 3px 6px;\n  }\n`;\n\nconst Inputs = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nconst StoreItemTitle = styled.div`\n  font-size: 1.2rem;\n  :hover {\n    text-decoration: underline;\n  }\n`;\n\nconst StoreItemPrice = styled.div`\n  font-size: 1rem;\n  color: rgb(80, 80, 80);\n`;\n\nexport const StoreItemComp = ({\n  storeItem,\n  addItem,\n  togglePU,\n}: {\n  storeItem: StoreItem;\n  addItem: (id: number, qty: number) => void;\n  togglePU: (toggle: boolean, id: number) => void;\n}) => {\n  const { togglePopUp } = useSelector(selectState);\n  const [qty, setQty] = React.useState<number>(1);\n\n  return (\n    <StoreItemContainer key={storeItem.id}>\n      <Column>\n        <StoreItemTitle onClick={() => togglePU(togglePopUp, storeItem.id)}>\n          {storeItem.title}\n        </StoreItemTitle>\n        <StoreItemPrice>£{storeItem.price.toFixed(2)}</StoreItemPrice>\n        <Inputs>\n          <NumberInput\n            type=\"number\"\n            value={qty}\n            onChange={(e) => setQty(parseInt(e.target.value))}\n          />\n          <Button\n            onClick={() => {\n              if (qty > 0) {\n                addItem(storeItem.id, qty);\n                setQty(1);\n              }\n            }}\n          >\n            Add to Basket\n          </Button>\n        </Inputs>\n      </Column>\n\n      <img\n        src={storeItem.image}\n        alt=\"\"\n        style={{ height: \"120px\", width: \"auto\" }}\n      />\n    </StoreItemContainer>\n  );\n};\n\nconst selectState = ({ state }: { state: AppState }) => state;\n","import * as React from \"react\";\nimport { StoreItem } from \"./API\";\nimport { StoreItemComp } from \"./StoreItemComp\";\nimport styled from \"styled-components\";\n\nconst StoreItemsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  box-shadow: rgba(0, 0, 0, 0.16) 0px 10px 36px 0px,\n    rgba(0, 0, 0, 0.06) 0px 0px 0px 1px;\n  width: 50%;\n  margin: auto;\n  padding: 1rem 3rem;\n  z-index: 12;\n  position: relative;\n  background: rgb(240, 239, 239);\n`;\n\nexport const StoreItems = ({\n  storeItems,\n  addItem,\n  togglePU,\n}: {\n  storeItems: StoreItem[];\n  addItem: (id: number, qty: number) => void;\n  togglePU: (toggle: boolean, id: number) => void;\n}) => {\n  return (\n    <StoreItemsContainer>\n      {storeItems.map((storeItem) => {\n        return (\n          <StoreItemComp\n            key={storeItem.id}\n            storeItem={storeItem}\n            addItem={addItem}\n            togglePU={togglePU}\n          />\n        );\n      })}\n    </StoreItemsContainer>\n  );\n};\n","import React from \"react\";\n\nexport const SVGs = () => {\n  return (\n    <div style={{ width: \"100vw\" }}>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 1440 320\"\n        style={{ zIndex: 1, marginTop: 0, position: \"fixed\" }}\n      >\n        <path\n          fill=\"#0099ff\"\n          fillOpacity=\"0.3\"\n          d=\"M0,192L30,202.7C60,213,120,235,180,202.7C240,171,300,85,360,64C420,43,480,85,540,96C600,107,660,85,720,112C780,139,840,213,900,213.3C960,213,1020,139,1080,138.7C1140,139,1200,213,1260,234.7C1320,256,1380,224,1410,208L1440,192L1440,0L1410,0C1380,0,1320,0,1260,0C1200,0,1140,0,1080,0C1020,0,960,0,900,0C840,0,780,0,720,0C660,0,600,0,540,0C480,0,420,0,360,0C300,0,240,0,180,0C120,0,60,0,30,0L0,0Z\"\n        ></path>\n      </svg>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 1440 320\"\n        style={{ zIndex: 1, marginTop: 0, position: \"fixed\" }}\n      >\n        <path\n          fill=\"#0099ff\"\n          fillOpacity=\"0.7\"\n          d=\"M0,256L26.7,245.3C53.3,235,107,213,160,192C213.3,171,267,149,320,160C373.3,171,427,213,480,197.3C533.3,181,587,107,640,112C693.3,117,747,203,800,213.3C853.3,224,907,160,960,160C1013.3,160,1067,224,1120,224C1173.3,224,1227,160,1280,117.3C1333.3,75,1387,53,1413,42.7L1440,32L1440,0L1413.3,0C1386.7,0,1333,0,1280,0C1226.7,0,1173,0,1120,0C1066.7,0,1013,0,960,0C906.7,0,853,0,800,0C746.7,0,693,0,640,0C586.7,0,533,0,480,0C426.7,0,373,0,320,0C266.7,0,213,0,160,0C106.7,0,53,0,27,0L0,0Z\"\n        ></path>\n      </svg>\n    </div>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { getAPIData, StoreItem } from \"./API\";\nimport {\n  addItemToBasket,\n  AppState,\n  setData,\n  sortOptions,\n  toggleBasket,\n  togglePopUp,\n  updateSortOption,\n} from \"./appSlice\";\nimport { Basket } from \"./Basket\";\nimport { BasketNav } from \"./BasketNav\";\nimport { DetailedItem } from \"./DetailedItem\";\nimport { Selector } from \"./Selector\";\nimport { AddDispatch } from \"./store\";\nimport { StoreItems } from \"./StoreItems\";\nimport { SVGs } from \"./SVGs\";\n\nconst MainContainer = styled.div`\n  width: 100vw;\n  height: 100%;\n`;\n\nconst TopNav = styled.div`\n  position: fixed;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  width: 100%;\n  height: 60px;\n  z-index: 14;\n`;\n\nconst DropDown = styled.div`\n  position: fixed;\n  margin-top: 4rem;\n  z-index: 12;\n  width: 100%;\n  display: flex;\n  justify-content: flex-end;\n`;\n\nconst LoadingCon = styled.div`\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Loading = styled.div`\n  font-size: 75px;\n  padding: 3rem;\n  border-radius: 200px;\n  background: rgba(0, 137, 216, 0.8);\n  color: white;\n  box-shadow: rgba(0, 0, 0, 0.2) 0px 20px 30px;\n`;\n\nfunction App() {\n  const dispatch = useDispatch<AddDispatch>();\n  const state: AppState = useSelector(selectState);\n\n  useEffect(() => {\n    async function getData() {\n      try {\n        const response: StoreItem[] = await getAPIData();\n        dispatch(setData({ items: response }));\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    getData();\n  }, [dispatch]);\n\n  return (\n    <MainContainer>\n      <SVGs />\n      <TopNav>\n        <BasketNav\n          toggle={(_toggle) => {\n            dispatch(toggleBasket({ toggle: _toggle }));\n          }}\n        />\n      </TopNav>\n      {state.toggleBasket ? (\n        <DropDown>\n          <Basket basketItems={state.basketItems} />\n        </DropDown>\n      ) : null}\n      {state.storeItems.length === 0 ? (\n        <LoadingCon>\n          <Loading>Loading...</Loading>\n        </LoadingCon>\n      ) : (\n        <div\n          style={{\n            display: \"flex\",\n            height: \"100%\",\n            justifyContent: \"center\",\n            alignContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          {state.togglePopUp ? (\n            <DetailedItem\n              item={state.popUpItem}\n              addItem={(_id, _qty) =>\n                dispatch(addItemToBasket({ id: _id, qty: _qty }))\n              }\n              togglePU={(_toggle, _id) => {\n                dispatch(togglePopUp({ toggle: _toggle, id: _id }));\n              }}\n            />\n          ) : (\n            <div>\n              <Selector\n                selectedOption={sortOptions}\n                value={state.currentSortOption}\n                onChange={(_option) => {\n                  dispatch(updateSortOption({ option: _option }));\n                }}\n              />\n              <StoreItems\n                storeItems={state.storeItems}\n                addItem={(_id, _qty) => {\n                  dispatch(addItemToBasket({ id: _id, qty: _qty }));\n                }}\n                togglePU={(_toggle, _id) => {\n                  dispatch(togglePopUp({ toggle: _toggle, id: _id }));\n                }}\n              />\n            </div>\n          )}\n        </div>\n      )}\n    </MainContainer>\n  );\n}\n\nconst selectState = ({ state }: { state: AppState }) => state;\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport appSlice from \"./appSlice\";\n\nconst store = configureStore({\n  reducer: {\n    state: appSlice,\n  },\n});\n\nexport default store;\n\nexport type AddDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}